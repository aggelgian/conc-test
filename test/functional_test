#!/usr/bin/env bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ebin=$DIR/ftest/ebin
utest_ebin=$DIR/utest/ebin

cores=$(nproc)
opts="-p ${cores} -s $((${cores} * 2))"

tests[0]="bitstr;f11;[0];9;${opts};bitstr-f11-1;no-whitelist"
tests[1]="bitstr;f12;[0,0,0];14;${opts};bitstr-f12-3;no-whitelist"
tests[2]="bitstr;f13;[0,0,0];24;${opts};bitstr-f13-3;no-whitelist"
tests[3]="bitstr;f21;[<<>>];6;${opts};bitstr-f21-1;no-whitelist"
tests[4]="bitstr;f22;[<<>>,42];8;${opts};bitstr-f22-2;no-whitelist"
tests[5]="bitstr;f23;[0,0];7;${opts};bitstr-f23-2;no-whitelist"
tests[6]="bitstr;f24;[<<>>,0];8;${opts};bitstr-f24-2;no-whitelist"
tests[7]="bitstr;f25;[<<>>,0];8;${opts};bitstr-f25-2;no-whitelist"
tests[8]="bitstr;f26;[<<>>,0];10;${opts};bitstr-f26-2;no-whitelist"
tests[9]="bitstr;f27;[<<>>,0];20;${opts};bitstr-f27-2;no-whitelist"
tests[10]="bitstr;f31;[<<>>,0];6;${opts};bitstr-f31-2;no-whitelist"
tests[11]="bitstr;f32;[<<>>,0,3];11;${opts};bitstr-f32-3;no-whitelist"
tests[12]="bitstr;f33;[<<>>,0,0,<<>>];21;${opts};bitstr-f33-4;no-whitelist"
tests[13]="bitstr;f34;[<<>>,0];50;${opts};bitstr-f34-2;no-whitelist"
tests[14]="bitstr;f35;[<<>>];50;${opts};bitstr-f35-1;no-whitelist"
tests[15]="bitstr;f36;[<<>>];50;${opts};bitstr-f36-1;no-whitelist"
tests[16]="bitstr;f37;[<<>>];50;${opts};bitstr-f37-1;no-whitelist"
tests[17]="otp_int;obsolete;[erlang, length, 1];3;${opts};otp_int-obsolete-3;no-whitelist"
tests[18]="whitelist;f;[1000];3;${opts};whitelist-f-1;whitelist-f-1"
tests[19]="whitelist;g;[1000];3;${opts};whitelist-g-1;whitelist-g-1"
tests[20]="whitelist;k;[1000];3;${opts};whitelist-k-1;whitelist-k-1"
tests[21]="complex_spec;f;[[]];32;${opts};complex_spec-f-1;no-whitelist"
tests[22]="collection;f;[[]];10;${opts};collection-f-1;no-whitelist"
tests[23]="collection;g;[1];2;${opts};collection-g-1;no-whitelist"
tests[24]="collection;g1;[1];2;${opts};collection-g1-1;no-whitelist"
tests[25]="collection;h;[1];2;${opts};collection-h-1;no-whitelist"
tests[26]="collection;f1;[1];4;${opts} -pa ${utest_ebin};collection-f1-1;no-whitelist"
tests[27]="funs;f1;[fun(_) -> 1 end];2;${opts};funs-f1-1;no-whitelist"
tests[28]="funs;f2;[fun(_) -> 1 end,0,0];2;${opts};funs-f2-3;no-whitelist"
tests[29]="funs;f3;[fun(_) -> 1 end,0,0];2;${opts};funs-f3-3;no-whitelist"
tests[30]="funs;f41;[fun(_) -> fun(_) -> 1 end end,0,0];2;${opts};funs-f41-3;no-whitelist"
tests[31]="funs;f42;[fun(_) -> fun(_) -> 1 end end,0,0];2;${opts};funs-f42-3;no-whitelist"
tests[32]="funs;f5;[fun(_,_,_) -> 1 end,0,0,0];2;${opts};funs-f5-4;no-whitelist"
tests[33]="funs;f6;[0];15;${opts};funs-f6-1;no-whitelist"
tests[34]="funs;f7;[fun(_,_) -> 1 end,[]];6;${opts};funs-f7-2;no-whitelist"
tests[35]="funs;f8;[fun(_) -> true end,[1]];4;${opts};funs-f8-2;no-whitelist"
tests[36]="funs;f91;[fun(_) -> 1 end,1,1];4;-p 1 -s 1;funs-f91-3;no-whitelist"
tests[37]="funs;f92;[fun(_) -> 1 end,1];4;${opts};funs-f92-2;no-whitelist"
tests[38]="funs;f10;[fun(_) -> 1 end];4;-p 1 -s 1;funs-f10-1;no-whitelist"
tests[39]="funs;f11;[fun(_) -> fun(_) -> 1 end end,fun(_) -> fun(_) -> 1 end end,1];4;${opts};funs-f11-3;no-whitelist"
tests[40]="funs;f12;[fun(_) -> fun(_) -> 1 end end];4;${opts};funs-f12-1;no-whitelist"
tests[41]="funs;f1ws;[fun(_) -> 1 end];10;${opts};funs-f1ws-1;no-whitelist"
tests[42]="funs;f2ws;[fun(_) -> 1 end,1,1];10;${opts};funs-f2ws-3;no-whitelist"
tests[43]="funs;f3ws;[fun(_) -> 1 end,1,1];10;${opts};funs-f3ws-3;no-whitelist"
tests[44]="funs;f5ws;[fun(_,_,_) -> 1 end,0,0,0];2;${opts};funs-f5ws-4;no-whitelist"
tests[45]="funs;f1hs;[fun(_) -> 1 end];2;${opts};funs-f1hs-1;no-whitelist"
tests[46]="funs;f13a;[fun(_) -> 1 end, {}];5;${opts};funs-f13a-2;no-whitelist"
tests[47]="funs;f13b;[fun(_) -> 1 end, <<>>];25;${opts};funs-f13b-2;no-whitelist"
tests[48]="sum;classify;[[]];25;${opts} -pa ../lib/proper/ebin;sum-classify-1;no-whitelist"
tests[49]="funs;f14;[fun(_) -> 1 end, []];25;${opts};funs-f14-2;no-whitelist"
tests[50]="collection;eval_nif;[ok];25;${opts};collection-eval_nif-1;no-whitelist"
tests[51]="bitstr;bit_sz;[<<>>];15;${opts};bitstr-bit_sz-1;no-whitelist"
tests[52]="bitstr;byte_sz;[<<>>];42;${opts};bitstr-byte_sz-1;no-whitelist"
tests[53]="bitstr;fbsl;[1, 1];25;${opts};bitstr-fbsl-2;no-whitelist"
tests[54]="bitstr;bsl_big;[1];100;${opts};bitstr-bsl_big-1;no-whitelist"
tests[55]="bitstr;fbsr;[1, 1];25;${opts};bitstr-fbsr-2;no-whitelist"
tests[56]="bitstr;bsr_big;[1];100;${opts};bitstr-bsr_big-1;no-whitelist"
tests[57]="bitstr;fbnot;[1];25;${opts};bitstr-fbnot-1;no-whitelist"
tests[58]="bitstr;bnot_big;[1];50;${opts};bitstr-bnot_big-1;no-whitelist"

for element in "${tests[@]}"; do
  IFS=';' read -a t <<< "$element"

  outfile=$DIR/${t[5]}
  expected=$DIR/ftest/expected/${t[5]}.expected
  whitelist=$DIR/ftest/whitelist/${t[6]}.txt

  echo -e "\nRunning ./cuter ${t[0]} ${t[1]} '${t[2]}' -d ${t[3]} ${t[4]} -w '${t[6]}.txt' --sorted-errors ..."
  cd "$ebin" && $DIR/../cuter ${t[0]} ${t[1]} "${t[2]}" -d ${t[3]} ${t[4]} -w "$whitelist" --sorted-errors  > "$outfile"
  if diff -q "$outfile" "$expected"; then
    rm -f "$outfile"
  else
    echo "================================================================="
    cat "$outfile"
    echo "================================================================="
    rm -f "$outfile"
    exit 1
  fi
done
exit 0
