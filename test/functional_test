#!/usr/bin/env bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
ebin=$DIR/ftest/ebin

tests[0]="bitstr;f11;[0];2;-p=2 -s=3;bitstr-f11-1"
tests[1]="bitstr;f12;[0,0,0];6;-p=2 -s=3;bitstr-f12-3"
tests[2]="bitstr;f13;[0,0,0];15;-p=2 -s=3;bitstr-f13-3"
tests[3]="bitstr;f21;[<<>>];6;-p=2 -s=3;bitstr-f21-1"
tests[4]="bitstr;f22;[<<>>,42];8;-p=2 -s=3;bitstr-f22-2"
tests[5]="bitstr;f23;[0,0];7;-p=2 -s=3;bitstr-f23-2"
tests[6]="bitstr;f31;[<<>>,0];6;-p=2 -s=3;bitstr-f31-2"
tests[7]="bitstr;f32;[<<>>,0,3];3;-p=2 -s=3;bitstr-f32-3"
tests[8]="bitstr;f33;[<<>>,0,0,<<>>];5;-p=2 -s=3;bitstr-f33-4"
tests[9]="otp_int;obsolete;[erlang, length, 1];3;-p=2 -s=3;otp_int-obsolete-3"

for element in "${tests[@]}"; do
  IFS=';' read -a t <<< "$element"

  outfile=$DIR/${t[5]}
  expected=$DIR/ftest/expected/${t[5]}.expected

  echo -e "\nRunning ./cuter ${t[0]} ${t[1]} '${t[2]}' ${t[3]} ${t[4]} ..."
  cd "$ebin" && $DIR/../cuter ${t[0]} ${t[1]} "${t[2]}" ${t[3]} ${t[4]} > "$outfile"
  if diff -q "$outfile" "$expected"; then
    rm -f "$outfile"
  else
    echo "================================================================="
    cat "$outfile"
    echo "================================================================="
    rm -f "$outfile"
    exit 1
  fi
done
exit 0

